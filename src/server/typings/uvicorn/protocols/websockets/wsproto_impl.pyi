"""
This type stub file was generated by pyright.
"""

import asyncio

class WSProtocol(asyncio.Protocol):
    def __init__(self, config, server_state, _loop=...) -> None:
        ...
    
    def connection_made(self, transport): # -> None:
        ...
    
    def connection_lost(self, exc): # -> None:
        ...
    
    def eof_received(self): # -> None:
        ...
    
    def data_received(self, data): # -> None:
        ...
    
    def handle_events(self): # -> None:
        ...
    
    def pause_writing(self): # -> None:
        """
        Called by the transport when the write buffer exceeds the high water mark.
        """
        ...
    
    def resume_writing(self): # -> None:
        """
        Called by the transport when the write buffer drops below the low water mark.
        """
        ...
    
    def shutdown(self): # -> None:
        ...
    
    def on_task_complete(self, task): # -> None:
        ...
    
    def handle_connect(self, event): # -> None:
        ...
    
    def handle_no_connect(self, event): # -> None:
        ...
    
    def handle_text(self, event): # -> None:
        ...
    
    def handle_bytes(self, event): # -> None:
        ...
    
    def handle_close(self, event): # -> None:
        ...
    
    def handle_ping(self, event): # -> None:
        ...
    
    def send_500_response(self): # -> None:
        ...
    
    async def run_asgi(self): # -> None:
        ...
    
    async def send(self, message):
        ...
    
    async def receive(self):
        ...
    


